# Dining Philosophers -- fixed by introducing asymmetry

import synch;

const N = 5;

const MustReach = {
    dict{
        .process: dict{ .name: "diner", .tag: tag },
        .label: "dine"
    } for tag in 1..N
};

def diner(which):
    while True:
        var left = which;
        var right = (which % N) + 1;
        if left < right:
            call P &(forks[left]);
            call P &(forks[right]);
        else:
            call P &(forks[right]);
            call P &(forks[left]);
        ;
        @dine:
        call V &(forks[left]);
        call V &(forks[right]);
    ;
;
forks = dict{ Semaphore(1) for sema in 1..N };
atomic:
    for i in 1..N:
        spawn diner(i), i;
    ;
;
