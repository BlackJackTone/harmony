from synch import *

def Barrier(limit):
    result = {
            .limit: limit,
            .mutex: Lock(),
            .empty: Condition(), .full: Condition(),
            .entered: 0, .left: limit
        }

def enter(b):
    acquire(?b->mutex)
    while b->entered == b->limit:   # wait for car to empty out
        wait(?b->empty, ?b->mutex)
    b->entered += 1
    if b->entered != b->limit:      # wait for car to fill up
        while b->entered < b->limit:
            wait(?b->full, ?b->mutex)
    else:                             
        b->left = 0      
        notifyAll(?b->full)         # car is full and ready to go
    release(?b->mutex)

def exit(b):
    acquire(?b->mutex)
    b->left += 1
    if b->left == b->limit:         # everybody left
        b->entered = 0
        notifyAll(?b->empty)        # let next group in
    release(?b->mutex)
