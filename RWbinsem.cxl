import synch;

def V_one():
    if (nwritersEntered == 0) and (nreadersWaiting > 0):
        call V &(rsema);
    elif ((nreadersEntered + nwritersEntered) == 0) and (nwritersWaiting > 0):
        call V &(wsema);
    else:
        call V &(mutex);
    ;
;
def acquire_rlock():
    call P &(mutex);
    if nwritersEntered > 0:
        nreadersWaiting = nreadersWaiting + 1;
        call V &(mutex)();
        call P &(rsema);
        nreadersWaiting = nreadersWaiting - 1;
    ;
    nreadersEntered = nreadersEntered + 1;
    call V_one();
;
def release_rlock():
    call P &(mutex);
    nreadersEntered = nreadersEntered - 1;
    call V_one();
;
def acquire_wlock():
    call P &(mutex);
    if (nreadersEntered + nwritersEntered) > 0:
        nwritersWaiting = nwritersWaiting + 1;
        call V &(mutex);
        call P &(wsema);
        nwritersWaiting = nwritersWaiting - 1;
    ;
    nwritersEntered = nwritersEntered + 1;
    call V_one();
;
def release_wlock():
    call P &(mutex);
    nwritersEntered = nwritersEntered - 1;
    call V_one();
;
mutex = Semaphore(1); rsema = Semaphore(0); wsema = Semaphore(0);
nreadersEntered = 0; nreadersWaiting = 0;
nwritersEntered = 0; nwritersWaiting = 0;
