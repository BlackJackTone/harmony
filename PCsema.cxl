import synch;

const NSLOTS = 2;     # size of bounded buffer
const NPROCS = 3;     # number of producers and number of consumers

def produce(item):
    call P &(n_empty);
    call P &(mutex);
    buf[b_in] = item;
    b_in = (b_in % NSLOTS) + 1;
    call V &(mutex);
    call V &(n_full);
;
def consume():
    call P &(n_full);
    call P &(mutex);
    result = buf[b_out];
    b_out = (b_out % NSLOTS) + 1;
    call V &(mutex);
    call V &(n_empty);
;
buf = dict{ () for x in 1..NSLOTS };
b_in = 1; b_out = 1;
n_full = Semaphore(0);
n_empty = Semaphore(NSLOTS);
mutex = Semaphore(1);
for i in 1..NPROCS:
    spawn consume();
    spawn produce(i);
;
