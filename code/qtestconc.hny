import queue, queuespec

const NOPS = 4
const VALUES = { 1..NOPS }

sequential qtime
qtime = 0

implq = queue.Queue()
specq = queuespec.Queue()

def thread():
    let op = choose({ .get, .put }):
        if op == .put:
            let v = choose(VALUES):
                queue.put(?implq, v)
                await qtime == this.qtime
                queuespec.put(?specq, v)
        else:
            let v = queue.get(?implq):
                await qtime == this.qtime
                let w = queuespec.get(?specq):
                    assert v == w
    qtime += 1

for i in {1..NOPS}:
    spawn thread()
