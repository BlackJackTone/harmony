const N = 4;

def qsort(a):
    if a == []:
        result = [];
    else:
        let i = 1, pivot = a[0], lower = [], higher = []:
            while i < len(a):
                if a[i] < pivot:
                    lower = lower + [a[i],];
                else:
                    higher = higher + [a[i],];
                ;
                i = i + 1;
            ;
            lower = qsort(lower);
            higher = qsort(higher);
            result = lower + ([pivot,] + higher);
        ;
    ;
;
def sorted(a):
    result = True;
    for i in 1..(len(a) - 1):
        if a[i - 1] > a[i]:
            result = False;
        ;
    ;
;
const values = 1..N;
list = [ choose(values) for i in 1..N ];
assert sorted(qsort(list));
# assert ispermutation(list, qsort(list));
