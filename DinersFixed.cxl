const N = 5;

def Semaphore(cnt):
    pass;
;
def P(sema):
    var blocked = True;
    while blocked:
        atomic:
            if (^sema) > 0:
                ^sema := (^sema) - 1;
                blocked := False;
            ;
        ;
    ;
;
def V(sema):
    atomic:
        ^sema := (^sema) + 1;
    ;
;
def diner(which):
    while True:
        var left = which;
        var right = (which % N) + 1;
        if left < right:
            call P&(forks[left]);
            call P&(forks[right]);
        else:
            call P&(forks[right]);
            call P&(forks[left]);
        ;
        @dine:
        call V&(forks[left]);
        call V&(forks[right]);
    ;
;
forks := dict{ Semaphore(1) for sema in 1..N };
for i in 1..N:
    spawn diner(i), i;
;
