# return s[b:e]
def subseq(s, b, e):
    result = [];
    for x in b..(e-1):
        result[x - b] = s[x];
    ;
;

def append(s, e):
    result = s + [e,];
;
def head(s):
    result = s[0];
;
def tail(s):
    result = subseq(s, 1, len(s));
;

# quicksort of a list
def qsort(a):
    if a == []:
        result = [];
    else:
        let i = 1, pivot = a[0], lower = [], higher = []:
            while i < len(a):
                if a[i] < pivot:
                    lower = lower + [a[i],];
                else:
                    higher = higher + [a[i],];
                ;
                i = i + 1;
            ;
            result = qsort(lower) + [pivot,] + qsort(higher);
        ;
    ;
;

# sum of a list
def listSum(a):
    result = 0;
    for i in keys(a):
        result = result + a[i];
    ;
;

def list2set(a):
    result = { a[i] for i in keys(a) };
;

# turn a list into a bag (multiset)
def list2bag(a):
    result = dict{};
    for i in keys(a):
        if a[i] in keys(result):
            result[a[i]] = result[a[i]] + 1;
        else:
            result[a[i]] = 1;
        ;
    ;
;

def listMin(a):
    result = min(list2set(a));
;
def listMax(a):
    result = max(list2set(a));
;
