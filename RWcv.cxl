import synch;

def reader():
    # while True:
        call lock&(rwlock);
        while nwriters > 0:
            call wait&(rcond);
        ;
        nreaders = nreaders + 1;
        call unlock&(rwlock);

        @rcs: atomic: pass;;   # critical section

        call lock&(rwlock);
        nreaders = nreaders - 1;
        if nreaders == 0:
            call notify&(wcond);
        ;
        call unlock&(rwlock);
    # ;
;
def writer():
    # while True:
        call lock&(rwlock);
        while (nreaders + nwriters) > 0:
            call wait&(wcond);
        ;
        nwriters = nwriters + 1;
        call unlock&(rwlock);

        @wcs: atomic: pass;;   # critical section

        call lock&(rwlock);
        nwriters = nwriters - 1;
        call notifyAll&(rcond);
        call notify&(wcond);
        call unlock&(rwlock);
    # ;
;
rwlock = False;
rcond = Condition&(rwlock);
wcond = Condition&(rwlock);
nreaders = 0;
nwriters = 0;

atomic:
    spawn reader(), 0;
    spawn reader(), 1;
    spawn writer(), 0;
    spawn writer(), 1;
;
