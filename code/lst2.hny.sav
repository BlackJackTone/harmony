import lst1;

def lst_find(lst, v):
    let before = lst let after = (!before).next:
        lock(?(!before).data.lock);
        lock(?(!after).data.lock);
        while (!after).data.value < v:
            unlock(?(!before).data.lock);
            before = after;
            after = (!before).next;
            lock(?(!after).data.lock);
        ;
        result = (before, after);
    ;
;
def lst_insert(lst, v):
    let before, after = lst_find(lst, v):
        if (!after).data.value != v:
            (!before).next = lst_node(v, after);
        ;
        unlock(?(!before).data.lock);
        unlock(?(!after).data.lock);
    ;
;
def lst_remove(lst, v):
    let before, after = lst_find(lst, v):
        if (!after).data.value == v:
            (!before).next = (!after).next;
            unlock(?(!after).data.lock);
            free(after);
        else:
            unlock(?(!after).data.lock);
        ;
        unlock(?(!before).data.lock);
    ;
;

mylist = lst_new();
lst_insert(mylist, 3);
assert lst_contains(mylist, 3);
lst_remove(mylist, 3);
assert not lst_contains(mylist, 3);
