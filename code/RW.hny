from synch import Lock, acquire, release

def RWlock():
    result = { .lock: Lock(), .nreaders: 0, .nwriters: 0 }

def acquire_rlock(rw):
    acquire(?rw->lock)
    while rw->nwriters > 0:
        release(?rw->lock)
        acquire(?rw->lock)
    rw->nreaders += 1
    release(?rw->lock)

def release_rlock(rw):
    acquire(?rw->lock)
    rw->nreaders -= 1
    release(?rw->lock)

def acquire_wlock(rw):
    acquire(?rw->lock)
    while (rw->nreaders + rw->nwriters) > 0:
        release(?rw->lock)
        acquire(?rw->lock)
    rw->nwriters = 1
    release(?rw->lock)

def release_wlock(rw):
    acquire(?rw->lock)
    rw->nwriters = 0
    release(?rw->lock)
