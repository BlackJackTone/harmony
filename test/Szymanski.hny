import set;

const N = 3;

flag = dict{ 0 for i in {1..N} };

def lock(self):
    flag[self] = 1;
    while not issubset({ flag[i] for i in {1..N} }, { 0, 1, 2 }):
        pass;
    ;
    flag[self] = 3;
    if 1 in { flag[i] for i in {1..N} }:
        flag[self] = 2;
        while 4 not in { flag[i] for i in {1..N} }:
            pass;
        ;
    ;
    flag[self] = 4;
    while not issubset({ flag[i] for i in {1..self-1} }, { 0, 1 }):
        pass;
    ;
;
def unlock(self):
    while not issubset({ flag[i] for i in {self+1..N}}, { 0, 1, 4 }):
        pass;
    ;
    flag[self] = 0;
;

def process(self):
    while choose({ False, True }):
        lock(self);
        @cs: assert atLabel.cs == dict{ nametag(): 1 };
        unlock(self);
    ;
;
for i in {1..N}:
    spawn process(i);
;
