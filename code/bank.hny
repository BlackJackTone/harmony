import synch

const MAX = 2
const NACCOUNTS = 2
const NTHREADS = 2

accounts = [{ .lock: synch.Lock(), .balance: choose({0..MAX})},] * NACCOUNTS

def transfer(a1, a2, amount):
    synch.acquire(?accounts[a1].lock)
    if amount <= accounts[a1].balance:
        accounts[a1].balance -= amount 
        synch.acquire(?accounts[a2].lock)
        accounts[a2].balance += amount 
        synch.release(?accounts[a2].lock)
        result = True
    else:
        result = False
    synch.release(?accounts[a1].lock)

def thread():
    let a1 = choose({0..NACCOUNTS-1})
    let a2 = choose({0..NACCOUNTS-1} - { a1 }):
        transfer(a1, a2, choose({0..MAX}))

for i in {1..NTHREADS}:
    spawn thread()
