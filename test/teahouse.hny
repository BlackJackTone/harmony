from synch import *

const NPAIRS = 2

tables = { .black: 0, .green: 0 }
mutex = Lock()
seating = { .black: Condition(?mutex), .green: Condition(?mutex) }
leaving = { .black: Condition(?mutex), .green: Condition(?mutex) }

def seatYourself(pref):
    acquire(?mutex)
    while tables[pref] >= 2:
        wait(?seating[pref], ?mutex)
    tables[pref] += 1
    notify(?leaving[pref])
    release(?mutex)

def leaveTeahouse(pref):
    acquire(?mutex)
    while tables[pref] < 2:
        wait(?leaving[pref], ?mutex)
    @drink: pass
    tables[pref] = (tables[pref] + 1) % 4
    if tables[pref] == 0:
        notifyAll(?seating[pref])
    release(?mutex)


def drinkTea(pref):
    seatYourself(pref)
    pass
    leaveTeahouse(pref)

for i in {1 .. NPAIRS}:
    let pref = choose({ .green, .black }):
        spawn drinkTea(pref)
        spawn drinkTea(pref)
