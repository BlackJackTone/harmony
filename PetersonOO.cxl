def P_enter(pm, self):
    (^pm).flags[self] = True;
    (^pm).turn = 1 - self;
    while (^pm).flags[1 - self] and ((^pm).turn == (1 - self)):
        pass;
    ;
;
def P_exit(pm, self):
    (^pm).flags[self] = False;
;
def P_mutex():
    result = dict{
        .turn: 0, .flags: [ False, False ],
        .enter: P_enter, .exit: P_exit
    };
;
def process(self, pm):
    while choose({ False, True }):
        call (^pm).enter(pm, self);
        @cs: assert atLabel.cs == dict{ nametag(): 1 };
        call (^pm).exit(pm, self);
    ;
;
mutex = P_mutex();
spawn process(0, &(mutex)), 0;
spawn process(1, &(mutex)), 1;
