def BoundedBuffer(size):
    result = { .buffer: (), .size: size, .tail: 0, .head: 0, .count: 0 }

def put(bb, v):
    atomically when bb->count < bb->size:
        bb->buffer[bb->tail] = v
        bb->tail = (bb->tail + 1) % bb->size
        bb->count += 1

def get(bb):
    atomically when bb->count > 0:
        result = bb->buffer[bb->head]
        bb->head = (bb->head + 1) % bb->size
        bb->count -= 1
