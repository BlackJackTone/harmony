import synch;

const NSLOTS = 2;     # size of bounded buffer
const NPRODS = 3;     # number of producers
const NCONSS = 3;     # number of consumers

def produce(item):
    P(&n_empty);
    P(&l_in);
    buf[b_in] = item;
    b_in = (b_in % NSLOTS) + 1;
    V(&l_in);
    V(&n_full);
;
def consume():
    P(&n_full);
    P(&l_out);
    result = buf[b_out];
    b_out = (b_out % NSLOTS) + 1;
    V(&l_out);
    V(&n_empty);
;
buf = dict{ () for x in 1..NSLOTS };
b_in = 1;
b_out = 1;
l_in = Semaphore(1);
l_out = Semaphore(1);
n_full = Semaphore(0);
n_empty = Semaphore(NSLOTS);
for i in 1..NPRODS:
    spawn produce(i);
;
for i in 1..NCONSS:
    spawn consume();
;
