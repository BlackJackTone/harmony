const N = 3;

def checkInvariant():
    let sum = 0:
        if not shared:
            sum = 1;
        ;
        for i in 0..(N-1):
            if not private[i]:
                sum = sum + 1;
            ;
        ;
        result = sum <= 1;
    ;
;
def invariantChecker():
    while choose({ False, True }):
        assert checkInvariant();
    ;
;

# tas() and process() code omitted to save space

shared = False;
private = [ True for i in 0..(N-1) ];
spawn invariantChecker(), ();
for i in 0..(N-1):
    spawn process(i);
;
