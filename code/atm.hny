import synch;

const N_ACCTS = 2;
const N_CUSTOMERS = 2;
const N_ATMS = 2;
const MAX_BALANCE = 1;

accounts = [ dict{ .lock: Lock(), .balance: choose({0..MAX_BALANCE}) }
                    for acct in {0..N_ACCTS-1} ]
;

def atm_check_balance(acct):    # return the balance on acct
    lock(?accounts[acct].lock);
    result = accounts[acct].balance;
    unlock(?accounts[acct].lock);
;
def atm_withdraw(acct, amount): # withdraw amount from acct
    lock(?accounts[acct].lock);
    accounts[acct].balance -= amount;
    result = True;              # return success
    unlock(?accounts[acct].lock);
;

def customer(atm, acct, amount):
    let balance = atm_check_balance(acct):
        if amount <= balance:
            atm_withdraw(acct, amount);
        ;
    ;
;
def checker():
    assert min(accounts[acct].balance for acct in {0..N_ACCTS-1}) >= 0;
;

spawn checker();
for i in {1..N_ATMS}:
    spawn customer(i, choose({0..N_ACCTS-1}), choose({0..MAX_BALANCE}));
;
