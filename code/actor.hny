import synch;

def pc_actor(q, nrequests):
    let requests, balance = {}, 0:
        while nrequests > 0:
            let req = dequeue(q):
                if req.type == .produce:
                    if balance >= 0:
                        requests |= { req };
                    else:
                        let r = choose(requests):
                            assert r.type == .consume;
                            enqueue(r.queue, req.item);
                            requests -= { r };
                        ;
                    ;
                    balance += 1;
                else:
                    assert req.type == .consume;
                    if balance <= 0:
                        requests |= { req };
                    else:
                        let r = choose(requests):
                            assert r.type == .produce;
                            enqueue(req.queue, r.item);
                            requests -= { r };
                        ;
                    ;
                    balance -= 1;
                ;
            ;
            nrequests -= 1;
        ;
    ;
;
def produce(q, item):
    enqueue(?pc_queue, dict{ .type: .produce, .item: item });
;
def consume(q1, q2):
    enqueue(q1, dict{ .type: .consume, .queue: q2 });
    result = dequeue(q2);
;
