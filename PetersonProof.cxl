# Peterson's algorithm

def process(self):
    while True:
        # Enter critical section
        flags[self] = True;
        @gate:
            atomic:
                turn = 1 - self;
            ;
        while flags[1 - self] and (turn == (1 - self)):
            pass;
        ;

        # Critical section
        @cs:
            assert (not (flags[1 - self])) or ((turn == self) or
                        ((atLabel("gate")) == dict{nametags[1 - self] : 1})),
                dict{
                    "nametag": nametag(),
                    "other": nametags[1 - self],
                    "flags": flags,
                    "turn": turn,
                    "gate": atLabel("gate")
                }
            ;

        # Leave critical section
        flags[self] = False;
    ;
;
flags = dict{ 0: False, 1: False };
turn = 0;

nametags = dict{ dict{ .name: "process", .tag: tag } for tag in 0..1 };
spawn process(0), 0;
spawn process(1), 1;
