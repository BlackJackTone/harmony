const N = 5;

def Semaphore(cnt):
    pass
.
def P(sema):
    var blocked = True;
    while blocked:
        atomic:
            if (^sema) > 0:
                ^sema := (^sema) - 1;
                blocked := False;
            .
        .
    .
.
def V(sema):
    atomic:
        ^sema := (^sema) + 1;
    .
.
def diner(which):
    while True:
        var left = which;
        var right = (which + 1) % N;
        if left < right:
            call P&(forks[left]);
            call P&(forks[right]);
        else:
            call P&(forks[right]);
            call P&(forks[left]);
        .
        @dine:
        call V&(forks[left]);
        call V&(forks[right]);
    .
.
forks := dict{ sema:Semaphore(1) | sema in 0..(N-1) };
var i = 0;
while i < N:
    spawn diner(i), i;
    i := i + 1;
.
