# condition variable solution to read/write locks

import synch;

def reader():
    while choose({ False, True }):
        call lock&(rwlock);
        while nwriters > 0:
            call wait&(rcond);
        ;
        nreaders = nreaders + 1;
        call unlock&(rwlock);

        @rcs: assert atLabel.wcs == dict{};

        call lock&(rwlock);
        nreaders = nreaders - 1;
        if nreaders == 0:
            call notify&(wcond);
        ;
        call unlock&(rwlock);
    ;
;
def writer():
    while choose({ False, True }):
        call lock&(rwlock);
        while (nreaders + nwriters) > 0:
            call wait&(wcond);
        ;
        nwriters = nwriters + 1;
        call unlock&(rwlock);

        @wcs: assert (atLabel.wcs == dict{ nametag(): 1 }) and
                     (atLabel.rcs == dict{})
              ;

        call lock&(rwlock);
        nwriters = nwriters - 1;
        call notifyAll&(rcond);
        call notify&(wcond);
        call unlock&(rwlock);
    ;
;
rwlock = False;
rcond = Condition&(rwlock);
wcond = Condition&(rwlock);
nreaders = 0;
nwriters = 0;

spawn reader(); spawn reader();
spawn writer(); spawn writer();
