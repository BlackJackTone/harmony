import synch;

const NREADERS = 2;
const NWRITERS = 2;

def acquire_rlock():
    call lock &(rwlock);
;
def release_rlock():
    call unlock &(rwlock);
;
def acquire_wlock():
    call lock &(rwlock);
;
def release_wlock():
    call unlock &(rwlock);
;
def reader(self):
    call acquire_rlock();
    @rcs: assert atLabel.wcs == dict{};
    flags[self] = True;
    if choose({ False, True }):
        let blocked = True:
            while blocked:
                if { flags[i] for i in 1..NREADERS } == { True }:
                    blocked = False;
                ;
            ;
        ;
    ;
    call release_rlock();
;
def writer():
    call acquire_wlock();
    @wcs: assert (atLabel.wcs == dict{ nametag(): 1 }) and
                 (atLabel.rcs == dict{})
          ;
    call release_wlock();
;
rwlock = Lock();
nreaders = 0;
flags = dict{ False for i in 1..NREADERS };
for i in 1..NREADERS:
    spawn reader(i);
;
for i in 1..NWRITERS:
    spawn writer();
;
