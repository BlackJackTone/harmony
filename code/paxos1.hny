import bag

const F = 1
const NACCEPTORS = (2 * F) + 1
const NLEADERS = F + 1
const NBALLOTS = 2

network = bag.empty()
let nfalse = choose({0..NLEADERS/2}):
    proposals = [ i <= nfalse for i in { 1..NLEADERS } ]
decisions = {}

def send(m):
    atomic: network = bag.add(network, m)

def receive(ballot, phase):
    let msgs = { e:c for (b,p,t,e):c in network
                        where (b,p,t) == (ballot, phase, .B) }:
        result = bag.combinations(msgs, NACCEPTORS - F)

for i in {0..NLEADERS - 1}:
    spawn leader(i + 1, proposals[i])
for i in {1..NACCEPTORS}:
    spawn acceptor()
